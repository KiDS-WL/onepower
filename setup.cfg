# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = onepower
description = A halo model code with modules for CosmoSIS
author = Andrej Dvornik
author_email = andrej.dvornik@me.com
license = mit
long_description = file: README.md

long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/KiDS-WL/onepower
project_urls =
    Documentation = https://kids-wl.github.io/onepower/index.html
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 6 - Mature
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Intended Audience :: Science/Research
    License :: OSI Approved
    License :: OSI Approved :: MIT License
    Natural Language :: English
    Topic :: Scientific/Engineering :: Physics
    Topic :: Scientific/Engineering :: Astronomy

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    numpy>=1.24.0
    scipy<1.12.0
    astropy>=6.0.0
    dark_emulator==1.1.2
    cached_property
    camb>=1.4.0
    numexpr>=2.8.7
    colossus>=1.3.5
    hmf @ git+https://github.com/andrejdvornik/hmf.git # replace with upstream when PR approved
    halomod @ git+https://github.com/andrejdvornik/halomod.git # replace with upstream when PR approved
    hankel>=1.2.2
    click
    toml>=0.10.1
    rich

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install cal_coefficients[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
docs =
    Sphinx>=1.7.5
    numpydoc>=0.8.0
    nbsphinx
#tests =
#    coverage>=4.5.1
#    pytest>=3.5.1
#    pytest-cov>=2.5.1
#    pre-commit
#    mpmath>=1.0.0
#    colossus>=1.2.1
#    halomod>=1.4.6
#    numba
#dev =
#    onepower[docs,tests]
#    setuptools_scm
#all =
#    onepower[dev,cosmo,fit]

[options.entry_points]
# Add here console scripts like:

#[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
#addopts =
#    --cov hmf --cov-report term-missing
#    --verbose
#norecursedirs =
#    dist
#    build
#    .tox
#testpaths = tests

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

#[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
#no-vcs = 1
#formats = bdist_wheel
