name: "sphinx: render"

on:
  push:
    branches:
      - main
      - andrej_dev

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - uses: actions/setup-python@v5
    - name: Install pandoc
      uses: pandoc/actions/setup@v1
    - name: Install dependencies
      run: |
        pip install -e .[docs]
    - name: Sphinx Docs
      run: |
        sphinx-build -b html docs docs/_build/html --keep-going
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: html-docs
        path: docs/_build/html/
    #- name: Deploy
    #  uses: peaceiris/actions-gh-pages@v3
    #  if: github.ref == 'refs/heads/main'
    #  with:
    #    publish_branch: gh-pages
    #    github_token: ${{ secrets.GITHUB_TOKEN }}
    #    publish_dir: docs/_build/html
    #    force_orphan: true
    - name: Determine directory to publish docs to
      id: docs-publish-dir
      run: |
        import os, re
        github_ref = os.environ.get('GITHUB_REF')
        m = re.match(r'^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+(-dev\.[0-9]+)?)$',
                       github_ref)
        if m:
              target = m.group(1)
        elif github_ref == 'refs/heads/main':
              target = 'main'
        else:
              target = ''
        set_output('target', target)
    - name: Publish docs to GitHub pages
      if: steps.docs-publish-dir.outputs.target != ''
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_branch: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/_build/html
        destination_dir: ${{ steps.docs-publish-dir.outputs.target }}
        keep_files: false
    outputs:
      docs-target: ${{ steps.docs-publish-dir.outputs.target }}

  docs-versions:
    name: Update docs versions JSON
    runs-on: Ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: gh-pages
    - name: Write versions to JSON file
      uses: jannekem/run-python-script-action@v1
      with:
        script: |
          import json
          from pathlib import Path

          cwd = Path.cwd()
          versions = sorted((item.name for item in cwd.iterdir()
                             if item.is_dir() and not item.name.startswith('.')),
                            reverse=True)
          target_dir = Path('gh-pages')
          target_dir.mkdir(parents=True)
          im_versions = [dict(name=version.replace("v", ""), version=version, url=f"https://kids-wl.github.io/onepower/{version}")
                         for version in versions]
          immaterial_target_file = target_dir / 'im_versions.json'
          with immaterial_target_file.open('w') as f:
              json.dump(im_versions, f)

    - name: Publish versions JSON to GitHub pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_branch: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: gh-pages
        keep_files: true
